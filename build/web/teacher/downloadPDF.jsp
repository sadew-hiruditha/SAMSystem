<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.sql.*, java.util.List, app.java.*, com.itextpdf.text.*, com.itextpdf.text.pdf.*" %>
<%@ page import="java.io.*, javax.servlet.ServletOutputStream" %>
<%@ page import="java.sql.Connection" %>
<%@ page import="java.sql.PreparedStatement" %>
<%@ page import="java.sql.ResultSet" %>
<%@ page import="java.sql.SQLException" %>
<%@ page import="java.time.LocalDate" %>
<%@ page import="java.time.LocalDateTime" %>
<%@ page import="java.time.format.DateTimeFormatter" %>
<%@ page import="app.java.DBConnector" %>
<%@ page import="app.java.Student" %>
<%@ page import="app.java.AttendanceRecord" %>
<%
    String reportType = request.getParameter("reportType");
    Connection con = null;
    try {
        con = DBConnector.getConnection();
        List<AttendanceRecord> records = null;
        String filename = "";
        if ("monthly".equals(reportType)) {
            int classId = Integer.parseInt(request.getParameter("classId"));
            String month = request.getParameter("month");
            records = AttendanceRecord.getMonthlyReport(con, classId, month);
            filename = "SAM System monthly_report_" + month + ".pdf";
        } 
       
        response.setContentType("application/pdf");
        response.setHeader("Content-Disposition", "attachment; filename=\"" + filename + "\"");
        
        // Create PDF
        Document document = new Document();
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PdfWriter.getInstance(document, baos);
        document.open();
        
        // Add content to PDF
        document.add(new Paragraph("Attendance Report"));
        document.add(new Paragraph("Report Type: " + reportType));
        
        // Add generation date and time
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedDateTime = now.format(formatter);
        document.add(new Paragraph("Generated on: " + formattedDateTime));
        
        document.add(new Paragraph("Generated by SAM System"));
        
        document.add(new Paragraph(" "));
        
        PdfPTable table = new PdfPTable(3);
        table.addCell("Date");
        table.addCell("Student Name");
        table.addCell("Status");
        
        for (AttendanceRecord record : records) {
            table.addCell(record.getDate().toString());
            table.addCell(record.getStudentName());
            table.addCell(record.getStatus());
        }
        document.add(table);
        document.close();
        
        // Write PDF to response
        ServletOutputStream sos = response.getOutputStream();
        baos.writeTo(sos);
        sos.flush();
    } catch (Exception e) {
        e.printStackTrace();
        // Handle error
    } finally {
        if (con != null) {
            try {
                con.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
%>